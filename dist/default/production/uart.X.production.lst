

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 18 22:05:49 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TXREG	set	4013
    55  0000                     _RCREG	set	4014
    56  0000                     _TRISCbits	set	3988
    57  0000                     _SPBRGH	set	4016
    58  0000                     _SPBRG	set	4015
    59  0000                     _PIE1bits	set	3997
    60  0000                     _PIR1bits	set	3998
    61  0000                     _RCSTAbits	set	4011
    62  0000                     _TXSTAbits	set	4012
    63  0000                     _RCSTA	set	4011
    64  0000                     _TXSTA	set	4012
    65  0000                     _TRISE	set	3990
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISC	set	3988
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISA	set	3986
    70  0000                     _ADRESH	set	4036
    71  0000                     _ADCON0bits	set	4034
    72  0000                     _ADCON2	set	4032
    73  0000                     _ADCON1	set	4033
    74  0000                     _ADCON0	set	4034
    75  0000                     _TXSTA1bits	set	4012
    76  0000                     _PORTBbits	set	3969
    77  0000                     _LATBbits	set	3978
    78                           
    79                           ; #config settings
    80  0000                     
    81                           	psect	cinit
    82  007D94                     __pcinit:
    83                           	opt stack 0
    84  007D94                     start_initialization:
    85                           	opt stack 0
    86  007D94                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Clear objects allocated to COMRAM (3 bytes)
    90  007D94  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
    91  007D96  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
    92  007D98  6A0B               	clrf	__pbssCOMRAM& (0+255),c
    93  007D9A                     end_of_initialization:
    94                           	opt stack 0
    95  007D9A                     __end_of__initialization:
    96                           	opt stack 0
    97  007D9A  0100               	movlb	0
    98  007D9C  EF40  F03F         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101  00000B                     __pbssCOMRAM:
   102                           	opt stack 0
   103  00000B                     _presencaDetectada:
   104                           	opt stack 0
   105  00000B                     	ds	2
   106  00000D                     _USART_Status:
   107                           	opt stack 0
   108  00000D                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111  000001                     __pcstackCOMRAM:
   112                           	opt stack 0
   113  000001                     ReadUSART@data:
   114                           	opt stack 0
   115  000001                     WriteUSART@data:
   116                           	opt stack 0
   117  000001                     OpenUSART@spbrg:
   118                           	opt stack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121  000001                     	ds	1
   122  000002                     TransmiteByte@byte:
   123                           	opt stack 0
   124  000002                     RecebeByte@b:
   125                           	opt stack 0
   126                           
   127                           ; 1 bytes @ 0x1
   128  000002                     	ds	1
   129  000003                     OpenUSART@config:
   130                           	opt stack 0
   131                           
   132                           ; 1 bytes @ 0x2
   133  000003                     	ds	1
   134  000004                     main@lr:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x3
   138  000004                     	ds	2
   139  000006                     main@ly:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x5
   143  000006                     	ds	2
   144  000008                     main@lg:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x7
   148  000008                     	ds	2
   149  00000A                     main@received:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x9
   153  00000A                     	ds	1
   154                           
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 44 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;  lg              2    7[COMRAM] int 
   165 ;;  ly              2    5[COMRAM] int 
   166 ;;  lr              2    3[COMRAM] int 
   167 ;;  received        1    9[COMRAM] unsigned char 
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   177 ;;      Params:         0       0       0       0       0       0       0       0       0
   178 ;;      Locals:         7       0       0       0       0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0
   180 ;;      Totals:         7       0       0       0       0       0       0       0       0
   181 ;;Total ram usage:        7 bytes
   182 ;; Hardware stack levels required when called:    2
   183 ;; This function calls:
   184 ;;		_InitADCON
   185 ;;		_InitPorts
   186 ;;		_InitSerial
   187 ;;		_RecebeByte
   188 ;;		_TransmiteByte
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195  007E80                     __ptext0:
   196                           	opt stack 0
   197  007E80                     _main:
   198                           	opt stack 29
   199                           
   200                           ;main.c: 46: InitPorts();
   201                           
   202                           ;incstack = 0
   203  007E80  ECF6  F03E         	call	_InitPorts	;wreg free
   204                           
   205                           ;main.c: 47: InitSerial();
   206  007E84  ECE5  F03E         	call	_InitSerial	;wreg free
   207                           
   208                           ;main.c: 48: InitADCON();
   209  007E88  ECD0  F03E         	call	_InitADCON	;wreg free
   210                           
   211                           ;main.c: 51: unsigned char received = 0x00;
   212  007E8C  0E00               	movlw	0
   213  007E8E  6E0A               	movwf	main@received,c
   214                           
   215                           ;main.c: 54: int lr = 0, ly = 0, lg = 0;
   216  007E90  0E00               	movlw	0
   217  007E92  6E05               	movwf	main@lr+1,c
   218  007E94  0E00               	movlw	0
   219  007E96  6E04               	movwf	main@lr,c
   220  007E98  0E00               	movlw	0
   221  007E9A  6E07               	movwf	main@ly+1,c
   222  007E9C  0E00               	movlw	0
   223  007E9E  6E06               	movwf	main@ly,c
   224  007EA0  0E00               	movlw	0
   225  007EA2  6E09               	movwf	main@lg+1,c
   226  007EA4  0E00               	movlw	0
   227  007EA6  6E08               	movwf	main@lg,c
   228  007EA8                     
   229                           ;main.c: 58: {
   230                           ;main.c: 59: if(lr == 1){ LATBbits.LATB0 = 1; } else { LATBbits.LATB0 = 0; }
   231  007EA8  0404               	decf	main@lr,w,c
   232  007EAA  1005               	iorwf	main@lr+1,w,c
   233  007EAC  A4D8               	btfss	status,2,c
   234  007EAE  D002               	goto	l42
   235  007EB0  808A               	bsf	3978,0,c	;volatile
   236  007EB2  D001               	goto	l43
   237  007EB4                     l42:
   238  007EB4  908A               	bcf	3978,0,c	;volatile
   239  007EB6                     l43:
   240                           
   241                           ;main.c: 60: if(ly == 1){ LATBbits.LATB1 = 1; } else { LATBbits.LATB1 = 0; }
   242  007EB6  0406               	decf	main@ly,w,c
   243  007EB8  1007               	iorwf	main@ly+1,w,c
   244  007EBA  A4D8               	btfss	status,2,c
   245  007EBC  D002               	goto	l44
   246  007EBE  828A               	bsf	3978,1,c	;volatile
   247  007EC0  D001               	goto	l45
   248  007EC2                     l44:
   249  007EC2  928A               	bcf	3978,1,c	;volatile
   250  007EC4                     l45:
   251                           
   252                           ;main.c: 61: if(lg == 1){ LATBbits.LATB2 = 1; } else { LATBbits.LATB2 = 0; }
   253  007EC4  0408               	decf	main@lg,w,c
   254  007EC6  1009               	iorwf	main@lg+1,w,c
   255  007EC8  A4D8               	btfss	status,2,c
   256  007ECA  D002               	goto	l46
   257  007ECC  848A               	bsf	3978,2,c	;volatile
   258  007ECE  D001               	goto	l47
   259  007ED0                     l46:
   260  007ED0  948A               	bcf	3978,2,c	;volatile
   261  007ED2                     l47:
   262                           
   263                           ;main.c: 63: if(PORTBbits.RB3 == 1)
   264  007ED2  A681               	btfss	3969,3,c	;volatile
   265  007ED4  D004               	goto	l48
   266                           
   267                           ;main.c: 64: TransmiteByte('R');
   268  007ED6  0E52               	movlw	82
   269  007ED8  ECDE  F03E         	call	_TransmiteByte
   270  007EDC  D00B               	goto	l52
   271  007EDE                     l48:
   272                           
   273                           ;main.c: 66: else if(PORTBbits.RB6 == 1)
   274  007EDE  AC81               	btfss	3969,6,c	;volatile
   275  007EE0  D004               	goto	l50
   276                           
   277                           ;main.c: 67: TransmiteByte('Y');
   278  007EE2  0E59               	movlw	89
   279  007EE4  ECDE  F03E         	call	_TransmiteByte
   280  007EE8  D005               	goto	l52
   281  007EEA                     l50:
   282                           
   283                           ;main.c: 69: else if(PORTBbits.RB7 == 1)
   284  007EEA  AE81               	btfss	3969,7,c	;volatile
   285  007EEC  D003               	goto	l52
   286                           
   287                           ;main.c: 70: TransmiteByte('G');
   288  007EEE  0E47               	movlw	71
   289  007EF0  ECDE  F03E         	call	_TransmiteByte
   290  007EF4                     l52:
   291                           
   292                           ;main.c: 73: TransmiteByte('\n');
   293  007EF4  0E0A               	movlw	10
   294  007EF6  ECDE  F03E         	call	_TransmiteByte
   295                           
   296                           ;main.c: 75: received = RecebeByte();
   297  007EFA  ECD7  F03E         	call	_RecebeByte	;wreg free
   298  007EFE  6E0A               	movwf	main@received,c
   299                           
   300                           ;main.c: 77: if(received == 'A'){ lr = 0; ly = 0; lg = 0; }
   301  007F00  0E41               	movlw	65
   302  007F02  180A               	xorwf	main@received,w,c
   303  007F04  A4D8               	btfss	status,2,c
   304  007F06  D00C               	goto	l53
   305  007F08  0E00               	movlw	0
   306  007F0A  6E05               	movwf	main@lr+1,c
   307  007F0C  0E00               	movlw	0
   308  007F0E  6E04               	movwf	main@lr,c
   309  007F10  0E00               	movlw	0
   310  007F12  6E07               	movwf	main@ly+1,c
   311  007F14  0E00               	movlw	0
   312  007F16  6E06               	movwf	main@ly,c
   313  007F18  0E00               	movlw	0
   314  007F1A  6E09               	movwf	main@lg+1,c
   315  007F1C  0E00               	movlw	0
   316  007F1E  6E08               	movwf	main@lg,c
   317  007F20                     l53:
   318                           
   319                           ;main.c: 78: if(received == 'B'){ lr = 1; ly = 0; lg = 0; }
   320  007F20  0E42               	movlw	66
   321  007F22  180A               	xorwf	main@received,w,c
   322  007F24  A4D8               	btfss	status,2,c
   323  007F26  D00C               	goto	l54
   324  007F28  0E00               	movlw	0
   325  007F2A  6E05               	movwf	main@lr+1,c
   326  007F2C  0E01               	movlw	1
   327  007F2E  6E04               	movwf	main@lr,c
   328  007F30  0E00               	movlw	0
   329  007F32  6E07               	movwf	main@ly+1,c
   330  007F34  0E00               	movlw	0
   331  007F36  6E06               	movwf	main@ly,c
   332  007F38  0E00               	movlw	0
   333  007F3A  6E09               	movwf	main@lg+1,c
   334  007F3C  0E00               	movlw	0
   335  007F3E  6E08               	movwf	main@lg,c
   336  007F40                     l54:
   337                           
   338                           ;main.c: 79: if(received == 'C'){ lr = 0; ly = 1; lg = 0; }
   339  007F40  0E43               	movlw	67
   340  007F42  180A               	xorwf	main@received,w,c
   341  007F44  A4D8               	btfss	status,2,c
   342  007F46  D00C               	goto	l55
   343  007F48  0E00               	movlw	0
   344  007F4A  6E05               	movwf	main@lr+1,c
   345  007F4C  0E00               	movlw	0
   346  007F4E  6E04               	movwf	main@lr,c
   347  007F50  0E00               	movlw	0
   348  007F52  6E07               	movwf	main@ly+1,c
   349  007F54  0E01               	movlw	1
   350  007F56  6E06               	movwf	main@ly,c
   351  007F58  0E00               	movlw	0
   352  007F5A  6E09               	movwf	main@lg+1,c
   353  007F5C  0E00               	movlw	0
   354  007F5E  6E08               	movwf	main@lg,c
   355  007F60                     l55:
   356                           
   357                           ;main.c: 80: if(received == 'D'){ lr = 1; ly = 1; lg = 0; }
   358  007F60  0E44               	movlw	68
   359  007F62  180A               	xorwf	main@received,w,c
   360  007F64  A4D8               	btfss	status,2,c
   361  007F66  D00C               	goto	l56
   362  007F68  0E00               	movlw	0
   363  007F6A  6E05               	movwf	main@lr+1,c
   364  007F6C  0E01               	movlw	1
   365  007F6E  6E04               	movwf	main@lr,c
   366  007F70  0E00               	movlw	0
   367  007F72  6E07               	movwf	main@ly+1,c
   368  007F74  0E01               	movlw	1
   369  007F76  6E06               	movwf	main@ly,c
   370  007F78  0E00               	movlw	0
   371  007F7A  6E09               	movwf	main@lg+1,c
   372  007F7C  0E00               	movlw	0
   373  007F7E  6E08               	movwf	main@lg,c
   374  007F80                     l56:
   375                           
   376                           ;main.c: 81: if(received == 'E'){ lr = 0; ly = 0; lg = 1; }
   377  007F80  0E45               	movlw	69
   378  007F82  180A               	xorwf	main@received,w,c
   379  007F84  A4D8               	btfss	status,2,c
   380  007F86  D00C               	goto	l57
   381  007F88  0E00               	movlw	0
   382  007F8A  6E05               	movwf	main@lr+1,c
   383  007F8C  0E00               	movlw	0
   384  007F8E  6E04               	movwf	main@lr,c
   385  007F90  0E00               	movlw	0
   386  007F92  6E07               	movwf	main@ly+1,c
   387  007F94  0E00               	movlw	0
   388  007F96  6E06               	movwf	main@ly,c
   389  007F98  0E00               	movlw	0
   390  007F9A  6E09               	movwf	main@lg+1,c
   391  007F9C  0E01               	movlw	1
   392  007F9E  6E08               	movwf	main@lg,c
   393  007FA0                     l57:
   394                           
   395                           ;main.c: 82: if(received == 'F'){ lr = 1; ly = 0; lg = 1; }
   396  007FA0  0E46               	movlw	70
   397  007FA2  180A               	xorwf	main@received,w,c
   398  007FA4  A4D8               	btfss	status,2,c
   399  007FA6  D00C               	goto	l58
   400  007FA8  0E00               	movlw	0
   401  007FAA  6E05               	movwf	main@lr+1,c
   402  007FAC  0E01               	movlw	1
   403  007FAE  6E04               	movwf	main@lr,c
   404  007FB0  0E00               	movlw	0
   405  007FB2  6E07               	movwf	main@ly+1,c
   406  007FB4  0E00               	movlw	0
   407  007FB6  6E06               	movwf	main@ly,c
   408  007FB8  0E00               	movlw	0
   409  007FBA  6E09               	movwf	main@lg+1,c
   410  007FBC  0E01               	movlw	1
   411  007FBE  6E08               	movwf	main@lg,c
   412  007FC0                     l58:
   413                           
   414                           ;main.c: 83: if(received == 'G'){ lr = 0; ly = 1; lg = 1; }
   415  007FC0  0E47               	movlw	71
   416  007FC2  180A               	xorwf	main@received,w,c
   417  007FC4  A4D8               	btfss	status,2,c
   418  007FC6  D00C               	goto	l59
   419  007FC8  0E00               	movlw	0
   420  007FCA  6E05               	movwf	main@lr+1,c
   421  007FCC  0E00               	movlw	0
   422  007FCE  6E04               	movwf	main@lr,c
   423  007FD0  0E00               	movlw	0
   424  007FD2  6E07               	movwf	main@ly+1,c
   425  007FD4  0E01               	movlw	1
   426  007FD6  6E06               	movwf	main@ly,c
   427  007FD8  0E00               	movlw	0
   428  007FDA  6E09               	movwf	main@lg+1,c
   429  007FDC  0E01               	movlw	1
   430  007FDE  6E08               	movwf	main@lg,c
   431  007FE0                     l59:
   432                           
   433                           ;main.c: 84: if(received == 'H'){ lr = 1; ly = 1; lg = 1; }
   434  007FE0  0E48               	movlw	72
   435  007FE2  180A               	xorwf	main@received,w,c
   436  007FE4  A4D8               	btfss	status,2,c
   437  007FE6  D760               	goto	l41
   438  007FE8  0E00               	movlw	0
   439  007FEA  6E05               	movwf	main@lr+1,c
   440  007FEC  0E01               	movlw	1
   441  007FEE  6E04               	movwf	main@lr,c
   442  007FF0  0E00               	movlw	0
   443  007FF2  6E07               	movwf	main@ly+1,c
   444  007FF4  0E01               	movlw	1
   445  007FF6  6E06               	movwf	main@ly,c
   446  007FF8  0E00               	movlw	0
   447  007FFA  6E09               	movwf	main@lg+1,c
   448  007FFC  0E01               	movlw	1
   449  007FFE  D753               	goto	L1
   450  008000                     __end_of_main:
   451                           	opt stack 0
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _TransmiteByte *****************
   455 ;; Defined at:
   456 ;;		line 107 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;  byte            1    wreg     unsigned char 
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  byte            1    1[COMRAM] unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         0       0       0       0       0       0       0       0       0
   471 ;;      Locals:         1       0       0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0
   473 ;;      Totals:         1       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        1 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    1
   477 ;; This function calls:
   478 ;;		_WriteUSART
   479 ;; This function is called by:
   480 ;;		_main
   481 ;;		_ConverterCanal0
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text1
   486  007DBC                     __ptext1:
   487                           	opt stack 0
   488  007DBC                     _TransmiteByte:
   489                           	opt stack 29
   490                           
   491                           ;incstack = 0
   492                           ;TransmiteByte@byte stored from wreg
   493  007DBC  6E02               	movwf	TransmiteByte@byte,c
   494  007DBE                     
   495                           ;main.c: 108: while (!TXSTA1bits.TRMT);
   496  007DBE  A2AC               	btfss	4012,1,c	;volatile
   497  007DC0  D7FE               	goto	l1055
   498                           
   499                           ;main.c: 109: WriteUSART(byte);
   500  007DC2  5002               	movf	TransmiteByte@byte,w,c
   501  007DC4  ECED  F03E         	call	_WriteUSART
   502  007DC8  0012               	return		;funcret
   503  007DCA                     __end_of_TransmiteByte:
   504                           	opt stack 0
   505                           status	equ	0xFD8
   506                           
   507 ;; *************** function _WriteUSART *****************
   508 ;; Defined at:
   509 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uwrite.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  data            1    wreg     unsigned char 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  data            1    0[COMRAM] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   523 ;;      Params:         0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0       0       0
   526 ;;      Totals:         1       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        1 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_TransmiteByte
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text2
   537  007DDA                     __ptext2:
   538                           	opt stack 0
   539  007DDA                     _WriteUSART:
   540                           	opt stack 29
   541                           
   542                           ;incstack = 0
   543                           ;WriteUSART@data stored from wreg
   544  007DDA  6E01               	movwf	WriteUSART@data,c
   545  007DDC  ACAC               	btfss	4012,6,c	;volatile
   546  007DDE  D003               	goto	l162
   547  007DE0  90AC               	bcf	4012,0,c	;volatile
   548  007DE2  B20D               	btfsc	_USART_Status,1,c
   549  007DE4  80AC               	bsf	4012,0,c	;volatile
   550  007DE6                     l162:
   551  007DE6  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
   552  007DEA  0012               	return		;funcret
   553  007DEC                     __end_of_WriteUSART:
   554                           	opt stack 0
   555                           status	equ	0xFD8
   556                           
   557 ;; *************** function _RecebeByte *****************
   558 ;; Defined at:
   559 ;;		line 114 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  b               1    1[COMRAM] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      unsigned char 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0
   576 ;;      Totals:         1       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        1 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    1
   580 ;; This function calls:
   581 ;;		_ReadUSART
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text3
   588  007DAE                     __ptext3:
   589                           	opt stack 0
   590  007DAE                     _RecebeByte:
   591                           	opt stack 29
   592                           
   593                           ;main.c: 115: unsigned char b = 0x00;
   594                           
   595                           ;incstack = 0
   596  007DAE  0E00               	movlw	0
   597  007DB0  6E02               	movwf	RecebeByte@b,c
   598                           
   599                           ;main.c: 118: b = ReadUSART();
   600  007DB2  EC01  F03F         	call	_ReadUSART	;wreg free
   601  007DB6  6E02               	movwf	RecebeByte@b,c
   602                           
   603                           ;main.c: 120: return b;
   604  007DB8  5002               	movf	RecebeByte@b,w,c
   605  007DBA  0012               	return	
   606  007DBC                     __end_of_RecebeByte:
   607                           	opt stack 0
   608                           status	equ	0xFD8
   609                           
   610 ;; *************** function _ReadUSART *****************
   611 ;; Defined at:
   612 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uread.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  data            1    0[COMRAM] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      unsigned char 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   626 ;;      Params:         0       0       0       0       0       0       0       0       0
   627 ;;      Locals:         1       0       0       0       0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0
   629 ;;      Totals:         1       0       0       0       0       0       0       0       0
   630 ;;Total ram usage:        1 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_RecebeByte
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text4
   640  007E02                     __ptext4:
   641                           	opt stack 0
   642  007E02                     _ReadUSART:
   643                           	opt stack 29
   644                           
   645                           ;incstack = 0
   646  007E02  0EF2               	movlw	242
   647  007E04  160D               	andwf	_USART_Status,f,c
   648  007E06  ACAB               	btfss	4011,6,c	;volatile
   649  007E08  D003               	goto	l149
   650  007E0A  900D               	bcf	_USART_Status,0,c
   651  007E0C  B0AB               	btfsc	4011,0,c	;volatile
   652  007E0E  800D               	bsf	_USART_Status,0,c
   653  007E10                     l149:
   654  007E10  B4AB               	btfsc	4011,2,c	;volatile
   655  007E12  840D               	bsf	_USART_Status,2,c
   656  007E14  B2AB               	btfsc	4011,1,c	;volatile
   657  007E16  860D               	bsf	_USART_Status,3,c
   658  007E18  CFAE F001          	movff	4014,ReadUSART@data	;volatile
   659  007E1C  5001               	movf	ReadUSART@data,w,c
   660  007E1E  0012               	return	
   661  007E20                     __end_of_ReadUSART:
   662                           	opt stack 0
   663                           status	equ	0xFD8
   664                           
   665 ;; *************** function _InitSerial *****************
   666 ;; Defined at:
   667 ;;		line 94 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   681 ;;      Params:         0       0       0       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		_OpenUSART
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text5
   696  007DCA                     __ptext5:
   697                           	opt stack 0
   698  007DCA                     _InitSerial:
   699                           	opt stack 29
   700                           
   701                           ;main.c: 95: OpenUSART(0b01111111
   702                           ;main.c: 96: & 0b10111111
   703                           ;main.c: 97: & 0b11111110
   704                           ;main.c: 98: & 0b11111101
   705                           ;main.c: 99: & 0b11111111
   706                           ;main.c: 100: & 0b11111111, 155);
   707                           
   708                           ;incstack = 0
   709  007DCA  0E00               	movlw	0
   710  007DCC  6E02               	movwf	OpenUSART@spbrg+1,c
   711  007DCE  0E9B               	movlw	155
   712  007DD0  6E01               	movwf	OpenUSART@spbrg,c
   713  007DD2  0E3C               	movlw	60
   714  007DD4  EC10  F03F         	call	_OpenUSART
   715  007DD8  0012               	return		;funcret
   716  007DDA                     __end_of_InitSerial:
   717                           	opt stack 0
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _OpenUSART *****************
   721 ;; Defined at:
   722 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uopen.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  config          1    wreg     unsigned char 
   725 ;;  spbrg           2    0[COMRAM] unsigned int 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  config          1    2[COMRAM] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   737 ;;      Params:         2       0       0       0       0       0       0       0       0
   738 ;;      Locals:         1       0       0       0       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0
   740 ;;      Totals:         3       0       0       0       0       0       0       0       0
   741 ;;Total ram usage:        3 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_InitSerial
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text6
   751  007E20                     __ptext6:
   752                           	opt stack 0
   753  007E20                     _OpenUSART:
   754                           	opt stack 29
   755                           
   756                           ;incstack = 0
   757                           ;OpenUSART@config stored from wreg
   758  007E20  6E03               	movwf	OpenUSART@config,c
   759  007E22  0E00               	movlw	0
   760  007E24  6EAC               	movwf	4012,c	;volatile
   761  007E26  0E00               	movlw	0
   762  007E28  6EAB               	movwf	4011,c	;volatile
   763  007E2A  B003               	btfsc	OpenUSART@config,0,c
   764  007E2C  88AC               	bsf	4012,4,c	;volatile
   765  007E2E  A203               	btfss	OpenUSART@config,1,c
   766  007E30  D002               	goto	l128
   767  007E32  8CAC               	bsf	4012,6,c	;volatile
   768  007E34  8CAB               	bsf	4011,6,c	;volatile
   769  007E36                     l128:
   770  007E36  B403               	btfsc	OpenUSART@config,2,c
   771  007E38  8EAC               	bsf	4012,7,c	;volatile
   772  007E3A  A603               	btfss	OpenUSART@config,3,c
   773  007E3C  D002               	goto	l130
   774  007E3E  88AB               	bsf	4011,4,c	;volatile
   775  007E40  D001               	goto	l131
   776  007E42                     l130:
   777  007E42  8AAB               	bsf	4011,5,c	;volatile
   778  007E44                     l131:
   779  007E44  B803               	btfsc	OpenUSART@config,4,c
   780  007E46  84AC               	bsf	4012,2,c	;volatile
   781  007E48  989E               	bcf	3998,4,c	;volatile
   782  007E4A  BA03               	btfsc	OpenUSART@config,5,c
   783  007E4C  86AB               	bsf	4011,3,c	;volatile
   784  007E4E  AC03               	btfss	OpenUSART@config,6,c
   785  007E50  D002               	goto	l134
   786  007E52  8A9D               	bsf	3997,5,c	;volatile
   787  007E54  D001               	goto	l135
   788  007E56                     l134:
   789  007E56  9A9D               	bcf	3997,5,c	;volatile
   790  007E58                     l135:
   791  007E58  9A9E               	bcf	3998,5,c	;volatile
   792  007E5A  AE03               	btfss	OpenUSART@config,7,c
   793  007E5C  D002               	goto	l136
   794  007E5E  889D               	bsf	3997,4,c	;volatile
   795  007E60  D001               	goto	l137
   796  007E62                     l136:
   797  007E62  989D               	bcf	3997,4,c	;volatile
   798  007E64                     l137:
   799  007E64  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   800  007E68  5002               	movf	OpenUSART@spbrg+1,w,c
   801  007E6A  6EB0               	movwf	4016,c	;volatile
   802  007E6C  8AAC               	bsf	4012,5,c	;volatile
   803  007E6E  8EAB               	bsf	4011,7,c	;volatile
   804  007E70  9C94               	bcf	3988,6,c	;volatile
   805  007E72  8E94               	bsf	3988,7,c	;volatile
   806  007E74  A8AC               	btfss	4012,4,c	;volatile
   807  007E76  0012               	return	
   808  007E78  BEAC               	btfsc	4012,7,c	;volatile
   809  007E7A  0012               	return	
   810  007E7C  8C94               	bsf	3988,6,c	;volatile
   811  007E7E  0012               	return	
   812  007E80                     __end_of_OpenUSART:
   813                           	opt stack 0
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _InitPorts *****************
   817 ;; Defined at:
   818 ;;		line 75 in file "config.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   832 ;;      Params:         0       0       0       0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text7
   846  007DEC                     __ptext7:
   847                           	opt stack 0
   848  007DEC                     _InitPorts:
   849                           	opt stack 30
   850                           
   851                           ;config.c: 84: TRISA = 0b00000000;
   852                           
   853                           ;incstack = 0
   854  007DEC  0E00               	movlw	0
   855  007DEE  6E92               	movwf	3986,c	;volatile
   856                           
   857                           ;config.c: 85: TRISB = 0b11111000;
   858  007DF0  0EF8               	movlw	248
   859  007DF2  6E93               	movwf	3987,c	;volatile
   860                           
   861                           ;config.c: 90: TRISC = 0b10000000;
   862  007DF4  0E80               	movlw	128
   863  007DF6  6E94               	movwf	3988,c	;volatile
   864                           
   865                           ;config.c: 92: TRISD = 0b00000000;
   866  007DF8  0E00               	movlw	0
   867  007DFA  6E95               	movwf	3989,c	;volatile
   868                           
   869                           ;config.c: 93: TRISE = 0b00000000;
   870  007DFC  0E00               	movlw	0
   871  007DFE  6E96               	movwf	3990,c	;volatile
   872  007E00  0012               	return		;funcret
   873  007E02                     __end_of_InitPorts:
   874                           	opt stack 0
   875                           status	equ	0xFD8
   876                           
   877 ;; *************** function _InitADCON *****************
   878 ;; Defined at:
   879 ;;		line 125 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   893 ;;      Params:         0       0       0       0       0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text8
   907  007DA0                     __ptext8:
   908                           	opt stack 0
   909  007DA0                     _InitADCON:
   910                           	opt stack 30
   911                           
   912                           ;main.c: 126: ADCON0 = 0b00000001;
   913                           
   914                           ;incstack = 0
   915  007DA0  0E01               	movlw	1
   916  007DA2  6EC2               	movwf	4034,c	;volatile
   917                           
   918                           ;main.c: 129: ADCON1 = 0b00001101;
   919  007DA4  0E0D               	movlw	13
   920  007DA6  6EC1               	movwf	4033,c	;volatile
   921                           
   922                           ;main.c: 131: ADCON2 = 0b00001000;
   923  007DA8  0E08               	movlw	8
   924  007DAA  6EC0               	movwf	4032,c	;volatile
   925  007DAC  0012               	return		;funcret
   926  007DAE                     __end_of_InitADCON:
   927                           	opt stack 0
   928  0000                     status	equ	0xFD8
   929                           status	equ	0xFD8
   930                           
   931                           	psect	rparam
   932  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _TransmiteByte->_WriteUSART
    _RecebeByte->_ReadUSART
    _InitSerial->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     658
                                              3 COMRAM     7     7      0
                          _InitADCON
                          _InitPorts
                         _InitSerial
                         _RecebeByte
                      _TransmiteByte
 ---------------------------------------------------------------------------------
 (1) _TransmiteByte                                        1     1      0      44
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RecebeByte                                           1     1      0      47
                                              1 COMRAM     1     1      0
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitSerial                                           0     0      0     296
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     296
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitADCON
   _InitPorts
   _InitSerial
     _OpenUSART
   _RecebeByte
     _ReadUSART
   _TransmiteByte
     _WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       D       1       13.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      20        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 18 22:05:49 2021

                     l41 7EA8                       l50 7EEA                       l42 7EB4  
                     l43 7EB6                       l52 7EF4                       l44 7EC2  
                     l53 7F20                       l45 7EC4                       l54 7F40  
                     l46 7ED0                       l55 7F60                       l47 7ED2  
                     l56 7F80                       l48 7EDE                       l57 7FA0  
                     l58 7FC0                       l59 7FE0              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
            __CFG_WDT$ON 000000                      l130 7E42                      l131 7E44  
                    l134 7E56                      l135 7E58                      l136 7E62  
                    l128 7E36                      l137 7E64                      l162 7DE6  
                    l149 7E10             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
             _TXSTA1bits 000FAC                     l1055 7DBE                     _main 7E80  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000             main@received 000A           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
        ??_TransmiteByte 0002                    status 000FD8           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000           WriteUSART@data 0001          __initialization 7D94  
             _InitSerial 7DCA             __end_of_main 8000               _RecebeByte 7DAE  
                 ??_main 0004            __activetblptr 000000              RecebeByte@b 0002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
     __size_of_InitADCON 000E                   _ADRESH 000FC4       __size_of_ReadUSART 001E  
                 _SPBRGH 000FB0       __size_of_InitPorts 0016           __CFG_XINST$OFF 000000  
     __size_of_OpenUSART 0060           __CFG_STVREN$ON 000000                   main@lg 0008  
                 main@lr 0004                   main@ly 0006               __accesstop 0060  
__end_of__initialization 7D9A            ___rparam_used 000001              ?_InitSerial 0001  
             _WriteUSART 7DDA           __pcstackCOMRAM 0001        __end_of_InitADCON 7DAE  
            ?_RecebeByte 0001        __end_of_ReadUSART 7E20        __end_of_InitPorts 7E02  
          ReadUSART@data 0001        __end_of_OpenUSART 7E80      __size_of_InitSerial 0010  
        __CFG_VREGEN$OFF 000000      __size_of_RecebeByte 000E                  __Hparam 0000  
                __Lparam 0000              ?_WriteUSART 0001                  __pcinit 7D94  
                __ramtop 0800                  __ptext0 7E80                  __ptext1 7DBC  
                __ptext2 7DDA                  __ptext3 7DAE                  __ptext4 7E02  
                __ptext5 7DCA                  __ptext6 7E20                  __ptext7 7DEC  
                __ptext8 7DA0     end_of_initialization 7D9A    __end_of_TransmiteByte 7DCA  
              _RCSTAbits 000FAB                _PORTBbits 000F81                _TRISCbits 000F94  
    __size_of_WriteUSART 0012                _TXSTAbits 000FAC             ??_InitSerial 0004  
           ??_RecebeByte 0002                _InitADCON 7DA0      start_initialization 7D94  
              _ReadUSART 7E02                _InitPorts 7DEC       __end_of_InitSerial 7DDA  
              _OpenUSART 7E20       __end_of_RecebeByte 7DBC         __CFG_LPT1OSC$OFF 000000  
             ?_InitADCON 0001              __pbssCOMRAM 000B               ?_ReadUSART 0001  
             ?_InitPorts 0001        _presencaDetectada 000B               ?_OpenUSART 0001  
           ??_WriteUSART 0001       __end_of_WriteUSART 7DEC                 _LATBbits 000F8A  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2              ??_InitADCON 0001              ??_ReadUSART 0001  
            ??_InitPorts 0001              ??_OpenUSART 0003          OpenUSART@config 0003  
               __Hrparam 0000                 __Lrparam 0000   __size_of_TransmiteByte 000E  
          __size_of_main 0180    __CFG_CPUDIV$OSC1_PLL2 000000           OpenUSART@spbrg 0001  
          _TransmiteByte 7DBC        TransmiteByte@byte 0002       __CFG_FOSC$HSPLL_HS 000000  
         ?_TransmiteByte 0001             _USART_Status 000D  
