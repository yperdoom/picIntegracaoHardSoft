

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 11 20:01:27 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TXREG	set	4013
    53  0000                     _TRISCbits	set	3988
    54  0000                     _SPBRGH	set	4016
    55  0000                     _SPBRG	set	4015
    56  0000                     _PIE1bits	set	3997
    57  0000                     _PIR1bits	set	3998
    58  0000                     _RCSTAbits	set	4011
    59  0000                     _TXSTAbits	set	4012
    60  0000                     _RCSTA	set	4011
    61  0000                     _TXSTA	set	4012
    62  0000                     _TRISE	set	3990
    63  0000                     _TRISD	set	3989
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISA	set	3986
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _ADCON2	set	4032
    70  0000                     _ADCON1	set	4033
    71  0000                     _ADCON0	set	4034
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  007EFC                     __pcinit:
    77                           	opt stack 0
    78  007EFC                     start_initialization:
    79                           	opt stack 0
    80  007EFC                     __initialization:
    81                           	opt stack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (3 bytes)
    84  007EFC  6A0B               	clrf	(__pbssCOMRAM+2)& (0+255),c
    85  007EFE  6A0A               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86  007F00  6A09               	clrf	__pbssCOMRAM& (0+255),c
    87  007F02                     end_of_initialization:
    88                           	opt stack 0
    89  007F02                     __end_of__initialization:
    90                           	opt stack 0
    91  007F02  0100               	movlb	0
    92  007F04  EFB7  F03F         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95  000009                     __pbssCOMRAM:
    96                           	opt stack 0
    97  000009                     _presencaDetectada:
    98                           	opt stack 0
    99  000009                     	ds	2
   100  00000B                     _USART_Status:
   101                           	opt stack 0
   102  00000B                     	ds	1
   103                           
   104                           	psect	cstackCOMRAM
   105  000001                     __pcstackCOMRAM:
   106                           	opt stack 0
   107  000001                     WriteUSART@data:
   108                           	opt stack 0
   109  000001                     OpenUSART@spbrg:
   110                           	opt stack 0
   111                           
   112                           ; 2 bytes @ 0x0
   113  000001                     	ds	1
   114  000002                     ??_TransmiteByte:
   115                           
   116                           ; 1 bytes @ 0x1
   117  000002                     	ds	1
   118  000003                     OpenUSART@config:
   119                           	opt stack 0
   120                           
   121                           ; 1 bytes @ 0x2
   122  000003                     	ds	1
   123  000004                     TransmiteByte@byte:
   124                           	opt stack 0
   125                           
   126                           ; 1 bytes @ 0x3
   127  000004                     	ds	1
   128  000005                     ??_main:
   129                           
   130                           ; 1 bytes @ 0x4
   131  000005                     	ds	2
   132  000007                     main@dadoDigital:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x6
   136  000007                     	ds	1
   137  000008                     main@recByte:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0x7
   141  000008                     	ds	1
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 44 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  recByte         1    7[COMRAM] unsigned char 
   153 ;;  dadoDigital     1    6[COMRAM] unsigned char 
   154 ;;  valorSensor     1    0        unsigned char 
   155 ;; Return value:  Size  Location     Type
   156 ;;                  1    wreg      void 
   157 ;; Registers used:
   158 ;;		wreg, status,2, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   164 ;;      Params:         0       0       0       0       0       0       0       0       0
   165 ;;      Locals:         2       0       0       0       0       0       0       0       0
   166 ;;      Temps:          2       0       0       0       0       0       0       0       0
   167 ;;      Totals:         4       0       0       0       0       0       0       0       0
   168 ;;Total ram usage:        4 bytes
   169 ;; Hardware stack levels required when called:    2
   170 ;; This function calls:
   171 ;;		_InitADCON
   172 ;;		_InitPorts
   173 ;;		_InitSerial
   174 ;;		_TransmiteByte
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181  007F6E                     __ptext0:
   182                           	opt stack 0
   183  007F6E                     _main:
   184                           	opt stack 29
   185                           
   186                           ;main.c: 46: InitPorts();
   187                           
   188                           ;incstack = 0
   189  007F6E  EC9C  F03F         	call	_InitPorts	;wreg free
   190                           
   191                           ;main.c: 47: InitSerial();
   192  007F72  EC8B  F03F         	call	_InitSerial	;wreg free
   193                           
   194                           ;main.c: 48: InitADCON();
   195  007F76  EC84  F03F         	call	_InitADCON	;wreg free
   196                           
   197                           ;main.c: 50: unsigned char dadoDigital = 0x01;
   198  007F7A  0E01               	movlw	1
   199  007F7C  6E07               	movwf	main@dadoDigital,c
   200                           
   201                           ;main.c: 51: unsigned char recByte = 0x00;
   202  007F7E  0E00               	movlw	0
   203  007F80  6E08               	movwf	main@recByte,c
   204  007F82                     l33:
   205                           
   206                           ;main.c: 64: TransmiteByte(41);
   207  007F82  0E29               	movlw	41
   208  007F84  ECA7  F03F         	call	_TransmiteByte
   209                           
   210                           ;main.c: 66: _delay((unsigned long)((50)*(48000000/4000.0)));
   211  007F88  0E04               	movlw	4
   212  007F8A  6E06               	movwf	(??_main+1)& (0+255),c
   213  007F8C  0E0C               	movlw	12
   214  007F8E  6E05               	movwf	??_main& (0+255),c
   215  007F90  0E34               	movlw	52
   216  007F92                     u287:
   217  007F92  2EE8               	decfsz	wreg,f,c
   218  007F94  D7FE               	bra	u287
   219  007F96  2E05               	decfsz	??_main& (0+255),f,c
   220  007F98  D7FC               	bra	u287
   221  007F9A  2E06               	decfsz	(??_main+1)& (0+255),f,c
   222  007F9C  D7FA               	bra	u287
   223                           
   224                           ;main.c: 67: }
   225  007F9E  D7F1               	goto	l33
   226  007FA0                     __end_of_main:
   227                           	opt stack 0
   228                           wreg	equ	0xFE8
   229                           
   230 ;; *************** function _TransmiteByte *****************
   231 ;; Defined at:
   232 ;;		line 87 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;  byte            1    wreg     unsigned char 
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  byte            1    3[COMRAM] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   246 ;;      Params:         0       0       0       0       0       0       0       0       0
   247 ;;      Locals:         1       0       0       0       0       0       0       0       0
   248 ;;      Temps:          2       0       0       0       0       0       0       0       0
   249 ;;      Totals:         3       0       0       0       0       0       0       0       0
   250 ;;Total ram usage:        3 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; Hardware stack levels required when called:    1
   253 ;; This function calls:
   254 ;;		_WriteUSART
   255 ;; This function is called by:
   256 ;;		_main
   257 ;;		_ConverterCanal0
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text1
   262  007F4E                     __ptext1:
   263                           	opt stack 0
   264  007F4E                     _TransmiteByte:
   265                           	opt stack 29
   266                           
   267                           ;incstack = 0
   268                           ;TransmiteByte@byte stored from wreg
   269  007F4E  6E04               	movwf	TransmiteByte@byte,c
   270                           
   271                           ;main.c: 89: WriteUSART(byte);
   272  007F50  5004               	movf	TransmiteByte@byte,w,c
   273  007F52  EC93  F03F         	call	_WriteUSART
   274                           
   275                           ;main.c: 90: _delay((unsigned long)((50)*(48000000/4000.0)));
   276  007F56  0E04               	movlw	4
   277  007F58  6E03               	movwf	(??_TransmiteByte+1)& (0+255),c
   278  007F5A  0E0C               	movlw	12
   279  007F5C  6E02               	movwf	??_TransmiteByte& (0+255),c
   280  007F5E  0E34               	movlw	52
   281  007F60                     u297:
   282  007F60  2EE8               	decfsz	wreg,f,c
   283  007F62  D7FE               	bra	u297
   284  007F64  2E02               	decfsz	??_TransmiteByte& (0+255),f,c
   285  007F66  D7FC               	bra	u297
   286  007F68  2E03               	decfsz	(??_TransmiteByte+1)& (0+255),f,c
   287  007F6A  D7FA               	bra	u297
   288  007F6C  0012               	return		;funcret
   289  007F6E                     __end_of_TransmiteByte:
   290                           	opt stack 0
   291                           wreg	equ	0xFE8
   292                           
   293 ;; *************** function _WriteUSART *****************
   294 ;; Defined at:
   295 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uwrite.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;  data            1    wreg     unsigned char 
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  data            1    0[COMRAM] unsigned char 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   309 ;;      Params:         0       0       0       0       0       0       0       0       0
   310 ;;      Locals:         1       0       0       0       0       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0       0       0       0       0
   312 ;;      Totals:         1       0       0       0       0       0       0       0       0
   313 ;;Total ram usage:        1 bytes
   314 ;; Hardware stack levels used:    1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_TransmiteByte
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text2
   323  007F26                     __ptext2:
   324                           	opt stack 0
   325  007F26                     _WriteUSART:
   326                           	opt stack 29
   327                           
   328                           ;incstack = 0
   329                           ;WriteUSART@data stored from wreg
   330  007F26  6E01               	movwf	WriteUSART@data,c
   331  007F28  ACAC               	btfss	4012,6,c	;volatile
   332  007F2A  D003               	goto	l130
   333  007F2C  90AC               	bcf	4012,0,c	;volatile
   334  007F2E  B20B               	btfsc	_USART_Status,1,c
   335  007F30  80AC               	bsf	4012,0,c	;volatile
   336  007F32                     l130:
   337  007F32  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
   338  007F36  0012               	return		;funcret
   339  007F38                     __end_of_WriteUSART:
   340                           	opt stack 0
   341                           wreg	equ	0xFE8
   342                           
   343 ;; *************** function _InitSerial *****************
   344 ;; Defined at:
   345 ;;		line 74 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         0       0       0       0       0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    1
   366 ;; This function calls:
   367 ;;		_OpenUSART
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text3
   374  007F16                     __ptext3:
   375                           	opt stack 0
   376  007F16                     _InitSerial:
   377                           	opt stack 29
   378                           
   379                           ;main.c: 75: OpenUSART(0b01111111
   380                           ;main.c: 76: & 0b10111111
   381                           ;main.c: 77: & 0b11111110
   382                           ;main.c: 78: & 0b11111101
   383                           ;main.c: 79: & 0b11111111
   384                           ;main.c: 80: & 0b11111111, 155);
   385                           
   386                           ;incstack = 0
   387  007F16  0E00               	movlw	0
   388  007F18  6E02               	movwf	OpenUSART@spbrg+1,c
   389  007F1A  0E9B               	movlw	155
   390  007F1C  6E01               	movwf	OpenUSART@spbrg,c
   391  007F1E  0E3C               	movlw	60
   392  007F20  ECD0  F03F         	call	_OpenUSART
   393  007F24  0012               	return		;funcret
   394  007F26                     __end_of_InitSerial:
   395                           	opt stack 0
   396                           wreg	equ	0xFE8
   397                           
   398 ;; *************** function _OpenUSART *****************
   399 ;; Defined at:
   400 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\plib\USART\uopen.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  config          1    wreg     unsigned char 
   403 ;;  spbrg           2    0[COMRAM] unsigned int 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  config          1    2[COMRAM] unsigned char 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   415 ;;      Params:         2       0       0       0       0       0       0       0       0
   416 ;;      Locals:         1       0       0       0       0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0
   418 ;;      Totals:         3       0       0       0       0       0       0       0       0
   419 ;;Total ram usage:        3 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_InitSerial
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text4
   429  007FA0                     __ptext4:
   430                           	opt stack 0
   431  007FA0                     _OpenUSART:
   432                           	opt stack 29
   433                           
   434                           ;incstack = 0
   435                           ;OpenUSART@config stored from wreg
   436  007FA0  6E03               	movwf	OpenUSART@config,c
   437  007FA2  0E00               	movlw	0
   438  007FA4  6EAC               	movwf	4012,c	;volatile
   439  007FA6  0E00               	movlw	0
   440  007FA8  6EAB               	movwf	4011,c	;volatile
   441  007FAA  B003               	btfsc	OpenUSART@config,0,c
   442  007FAC  88AC               	bsf	4012,4,c	;volatile
   443  007FAE  A203               	btfss	OpenUSART@config,1,c
   444  007FB0  D002               	goto	l96
   445  007FB2  8CAC               	bsf	4012,6,c	;volatile
   446  007FB4  8CAB               	bsf	4011,6,c	;volatile
   447  007FB6                     l96:
   448  007FB6  B403               	btfsc	OpenUSART@config,2,c
   449  007FB8  8EAC               	bsf	4012,7,c	;volatile
   450  007FBA  A603               	btfss	OpenUSART@config,3,c
   451  007FBC  D002               	goto	l98
   452  007FBE  88AB               	bsf	4011,4,c	;volatile
   453  007FC0  D001               	goto	l99
   454  007FC2                     l98:
   455  007FC2  8AAB               	bsf	4011,5,c	;volatile
   456  007FC4                     l99:
   457  007FC4  B803               	btfsc	OpenUSART@config,4,c
   458  007FC6  84AC               	bsf	4012,2,c	;volatile
   459  007FC8  989E               	bcf	3998,4,c	;volatile
   460  007FCA  BA03               	btfsc	OpenUSART@config,5,c
   461  007FCC  86AB               	bsf	4011,3,c	;volatile
   462  007FCE  AC03               	btfss	OpenUSART@config,6,c
   463  007FD0  D002               	goto	l102
   464  007FD2  8A9D               	bsf	3997,5,c	;volatile
   465  007FD4  D001               	goto	l103
   466  007FD6                     l102:
   467  007FD6  9A9D               	bcf	3997,5,c	;volatile
   468  007FD8                     l103:
   469  007FD8  9A9E               	bcf	3998,5,c	;volatile
   470  007FDA  AE03               	btfss	OpenUSART@config,7,c
   471  007FDC  D002               	goto	l104
   472  007FDE  889D               	bsf	3997,4,c	;volatile
   473  007FE0  D001               	goto	l105
   474  007FE2                     l104:
   475  007FE2  989D               	bcf	3997,4,c	;volatile
   476  007FE4                     l105:
   477  007FE4  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   478  007FE8  5002               	movf	OpenUSART@spbrg+1,w,c
   479  007FEA  6EB0               	movwf	4016,c	;volatile
   480  007FEC  8AAC               	bsf	4012,5,c	;volatile
   481  007FEE  8EAB               	bsf	4011,7,c	;volatile
   482  007FF0  9C94               	bcf	3988,6,c	;volatile
   483  007FF2  8E94               	bsf	3988,7,c	;volatile
   484  007FF4  A8AC               	btfss	4012,4,c	;volatile
   485  007FF6  0012               	return	
   486  007FF8  BEAC               	btfsc	4012,7,c	;volatile
   487  007FFA  0012               	return	
   488  007FFC  8C94               	bsf	3988,6,c	;volatile
   489  007FFE  0012               	return	
   490  008000                     __end_of_OpenUSART:
   491                           	opt stack 0
   492                           wreg	equ	0xFE8
   493                           
   494 ;; *************** function _InitPorts *****************
   495 ;; Defined at:
   496 ;;		line 75 in file "config.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   510 ;;      Params:         0       0       0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text5
   524  007F38                     __ptext5:
   525                           	opt stack 0
   526  007F38                     _InitPorts:
   527                           	opt stack 30
   528                           
   529                           ;config.c: 82: TRISA = 0b10000011;
   530                           
   531                           ;incstack = 0
   532  007F38  0E83               	movlw	131
   533  007F3A  6E92               	movwf	3986,c	;volatile
   534                           
   535                           ;config.c: 83: TRISB = 0b11110000;
   536  007F3C  0EF0               	movlw	240
   537  007F3E  6E93               	movwf	3987,c	;volatile
   538                           
   539                           ;config.c: 84: TRISC = 0b10000000;
   540  007F40  0E80               	movlw	128
   541  007F42  6E94               	movwf	3988,c	;volatile
   542                           
   543                           ;config.c: 85: TRISD = 0b00000000;
   544  007F44  0E00               	movlw	0
   545  007F46  6E95               	movwf	3989,c	;volatile
   546                           
   547                           ;config.c: 86: TRISE = 0b00000000;
   548  007F48  0E00               	movlw	0
   549  007F4A  6E96               	movwf	3990,c	;volatile
   550  007F4C  0012               	return		;funcret
   551  007F4E                     __end_of_InitPorts:
   552                           	opt stack 0
   553                           wreg	equ	0xFE8
   554                           
   555 ;; *************** function _InitADCON *****************
   556 ;; Defined at:
   557 ;;		line 106 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   571 ;;      Params:         0       0       0       0       0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0
   574 ;;      Totals:         0       0       0       0       0       0       0       0       0
   575 ;;Total ram usage:        0 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text6
   585  007F08                     __ptext6:
   586                           	opt stack 0
   587  007F08                     _InitADCON:
   588                           	opt stack 30
   589                           
   590                           ;main.c: 107: ADCON0 = 0b00000001;
   591                           
   592                           ;incstack = 0
   593  007F08  0E01               	movlw	1
   594  007F0A  6EC2               	movwf	4034,c	;volatile
   595                           
   596                           ;main.c: 110: ADCON1 = 0b00001101;
   597  007F0C  0E0D               	movlw	13
   598  007F0E  6EC1               	movwf	4033,c	;volatile
   599                           
   600                           ;main.c: 112: ADCON2 = 0b00001000;
   601  007F10  0E08               	movlw	8
   602  007F12  6EC0               	movwf	4032,c	;volatile
   603  007F14  0012               	return		;funcret
   604  007F16                     __end_of_InitADCON:
   605                           	opt stack 0
   606  0000                     wreg	equ	0xFE8
   607                           wreg	equ	0xFE8
   608                           
   609                           	psect	rparam
   610  0000                     wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_TransmiteByte
    _TransmiteByte->_WriteUSART
    _InitSerial->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     342
                                              4 COMRAM     4     4      0
                          _InitADCON
                          _InitPorts
                         _InitSerial
                      _TransmiteByte
 ---------------------------------------------------------------------------------
 (1) _TransmiteByte                                        3     3      0      44
                                              1 COMRAM     3     3      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitSerial                                           0     0      0     296
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     296
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitADCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitADCON
   _InitPorts
   _InitSerial
     _OpenUSART
   _TransmiteByte
     _WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       B       1       11.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 11 20:01:27 2021

                     l33 7F82                       l96 7FB6                       l98 7FC2  
                     l99 7FC4              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000              __CFG_WDT$ON 000000  
                    l102 7FD6                      l103 7FD8                      l104 7FE2  
                    l105 7FE4                      l130 7F32             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      u287 7F92                      u297 7F60  
                    wreg 000FE8              main@recByte 0008                     _main 7F6E  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    _RCSTA 000FAB                    _SPBRG 000FAF  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          ??_TransmiteByte 0002           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000           WriteUSART@data 0001          __initialization 7EFC  
             _InitSerial 7F16             __end_of_main 7FA0                   ??_main 0005  
          __activetblptr 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0       __size_of_InitADCON 000E                   _ADRESH 000FC4  
                 _SPBRGH 000FB0       __size_of_InitPorts 0016           __CFG_XINST$OFF 000000  
     __size_of_OpenUSART 0060           __CFG_STVREN$ON 000000               __accesstop 0060  
__end_of__initialization 7F02            ___rparam_used 000001              ?_InitSerial 0001  
             _WriteUSART 7F26           __pcstackCOMRAM 0001        __end_of_InitADCON 7F16  
      __end_of_InitPorts 7F4E        __end_of_OpenUSART 8000      __size_of_InitSerial 0010  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
            ?_WriteUSART 0001                  __pcinit 7EFC                  __ramtop 0800  
                __ptext0 7F6E                  __ptext1 7F4E                  __ptext2 7F26  
                __ptext3 7F16                  __ptext4 7FA0                  __ptext5 7F38  
                __ptext6 7F08     end_of_initialization 7F02    __end_of_TransmiteByte 7F6E  
              _RCSTAbits 000FAB                _TRISCbits 000F94          main@dadoDigital 0007  
    __size_of_WriteUSART 0012                _TXSTAbits 000FAC             ??_InitSerial 0004  
              _InitADCON 7F08      start_initialization 7EFC                _InitPorts 7F38  
     __end_of_InitSerial 7F26                _OpenUSART 7FA0         __CFG_LPT1OSC$OFF 000000  
             ?_InitADCON 0001              __pbssCOMRAM 0009               ?_InitPorts 0001  
      _presencaDetectada 0009               ?_OpenUSART 0001             ??_WriteUSART 0001  
     __end_of_WriteUSART 7F38                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2              ??_InitADCON 0001  
            ??_InitPorts 0001              ??_OpenUSART 0003          OpenUSART@config 0003  
               __Hrparam 0000                 __Lrparam 0000   __size_of_TransmiteByte 0020  
          __size_of_main 0032    __CFG_CPUDIV$OSC1_PLL2 000000           OpenUSART@spbrg 0001  
          _TransmiteByte 7F4E        TransmiteByte@byte 0004       __CFG_FOSC$HSPLL_HS 000000  
         ?_TransmiteByte 0001             _USART_Status 000B  
